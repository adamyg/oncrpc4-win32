# -*- mode: mak; indent-tabs-mode: t; tab-width: 8 -*-
# $Id: Makefile.in,v 1.5 2022/05/31 03:35:31 cvsuser Exp $
# liboncrpc makefile.
#
# Copyright (c) 2020 - 2022, Adam Young.
# All rights reserved.
#
# This file is part of oncrpc4-win32.
#
# The applications are free software: you can redistribute it
# and/or modify it under the terms of the oncrpc4-win32 License.
#
# Redistributions of source code must retain the above copyright
# notice, and must be distributed with the license document above.
#
# Redistributions in binary form must reproduce the above copyright
# notice, and must include the license document above in
# the documentation and/or other materials provided with the
# distribution.
#
# This project is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the Licence for details.
# ==end==
#

@SET_MAKE@
ROOT=		@abs_top_builddir@
top_builddir=	@top_builddir@

# File extensions

E=
O=		.o
H=		.h
A=		.a
LP=		lib

CLEAN=		*.bak *~ *.BAK *.swp *.tmp core *.core a.out
XCLEAN=

# Compilers, programs

CC=		@CC@
AR=		@AR@
RANLIB=		@RANLIB@
RM=		@RM@
PERL=		@PERL@
LIBTOOL=	@LIBTOOL@
RC=		@RC@

# Configuration

ifeq ("$(BUILD_TYPE)","")	#default
BUILD_TYPE=	debug
MAKEFLAGS+=	BUILD_TYPE=debug
endif
ifneq ("$(BUILD_TYPE)","release")
RTSUFFIX=d
endif

# Directories

D_INC=		$(ROOT)/include
D_BIN=		$(ROOT)/bin@TOOLCHAINEXT@/$(BUILD_TYPE)
D_LIB=		$(ROOT)/lib@TOOLCHAINEXT@/$(BUILD_TYPE)
D_OBJ=		$(ROOT)/objects@TOOLCHAINEXT@/$(BUILD_TYPE)/liboncrpc

# Common flags

XFLAGS=

CFLAGS=		@CFLAGS@
CWARN=		@CWARN@
ifeq (gcc,$(findstring gcc,$(CC)))
CWARN+=		-Wno-unused-result -Wno-unused-parameter -Wno-unused-variable -Wno-unused-but-set-variable
CWARN+=		-Wno-deprecated-declarations -Wno-sign-compare
endif
CDEBUG=		@CDEBUG@
CRELEASE=	@CRELEASE@
LDDEBUG=	@LDDEBUG@
LDRELEASE=	@LDRELEASE@

CINCLUDE=	-I. -I$(D_INC) @CINCLUDE@

CEXTRA+=	-DPORTMAP -DLIBRPC_LIBRARY -D_REENTRANT
CEXTRA+=	@DEFS@

ifneq ("@WINSDKLIB@","")
LIBPATH=	$(D_LIB);@WINSDKLIB@
else
LIBPATH=	$(D_LIB)
endif

ifeq ("$(BUILD_TYPE)","release")
CFLAGS+=	$(CRELEASE) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
LDFLAGS=	$(LDRELEASE) @LDFLAGS@
else
CFLAGS+=	$(CDEBUG) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
LDFLAGS=	$(LDDEBUG) @LDFLAGS@
endif
LDLIBS=		-L$(LIBPATH) $(LINKLIBS) @LIBS@ @EXTRALIBS@

ARFLAGS=	rcv
YFLAGS=		-d
RMFLAGS=	-f

#########################################################################################
# Targets

ONCRPCLIB=	$(D_LIB)/$(LP)oncrpc_static$(A)
ONCRPCDLL=	$(D_LIB)/$(LP)oncrpc.la

VERSION=	1.0.1
VERSIONSPEC=	$(subst .,:,$(VERSION))

ONCRPCBASE=	../libsrc
ONCRPCSRC=	$(ONCRPCBASE)
ONCRPCINCLUDE=	$(ONCRPCBASE)/include

CINCLUDE+=	-I$(ONCRPCINCLUDE) -I$(ONCRPCINCLUDE)/win32

LDLIBS+=

VPATH+=		$(ONCRPCSRC) $(ONCRPCBASE)/win32

CSOURCES=\
	authunix_prot.c		\
	auth_none.c		\
	auth_unix.c		\
	bindresvport.c		\
	clnt_bcast.c		\
	clnt_dg.c		\
	clnt_generic.c		\
	clnt_perror.c		\
	clnt_raw.c		\
	clnt_simple.c		\
	clnt_vc.c		\
	getnetconfig.c		\
	getnetpath.c		\
	getrpcent.c		\
	getrpcport.c		\
	mt_misc.c		\
	pmap_clnt.c		\
	pmap_getmaps.c		\
	pmap_getport.c		\
	pmap_prot.c		\
	pmap_prot2.c		\
	pmap_rmt.c		\
	rpcb_clnt.c		\
	rpcb_prot.c		\
	rpcb_st_xdr.c		\
	rpc_callmsg.c		\
	rpc_commondata.c	\
	rpc_dtablesize.c	\
	rpc_generic.c		\
	rpc_prot.c		\
	rpc_soc.c		\
	svc.c			\
	svc_auth.c		\
	svc_auth_unix.c		\
	svc_dg.c		\
	svc_fdset.c		\
	svc_generic.c		\
	svc_raw.c		\
	svc_run.c		\
	svc_simple.c		\
	svc_vc.c		\
	xdr.c			\
	xdr_array.c		\
	xdr_float.c		\
	xdr_mem.c		\
	xdr_rec.c		\
	xdr_reference.c		\
	xdr_sizeof.c		\
	xdr_stdio.c		\
	__rpc_getxid.c

CSOURCES+=\
	gettimeofday.c		\
	gaistrerror.c		\
	ifaddrs.c		\
	randomid.c		\
	win32_socket.c

RESOURCES=\
	liboncrpc.rc

LIBOBJS=	$(addprefix $(D_OBJ)/,$(subst .c,$(O),$(CSOURCES)))

DLLOBJS=	$(subst $(O),.lo,$(LIBOBJS))
ifeq (mingw,$(findstring mingw,"@build_os@"))
DLLOBJS+=	$(addprefix $(D_OBJ)/,$(subst .rc,_res.o,$(RESOURCES)))
else
DLLOBJS+=	$(addprefix $(D_OBJ)/,$(subst .rc,.res,$(RESOURCES)))
endif

LIBS=		$(ONCRPCLIB)
DLLS=		$(ONCRPCDLL)
TSKS=
INSTALLED=


#########################################################################################
# Rules

.PHONY:		build release debug
build:		unpacked
unpacked:		object $(LIBS) $(DLLS) $(TSKS) installinc

release:
		$(MAKE) BUILD_TYPE=release $(filter-out release, $(MAKECMDGOALS))
debug:
		$(MAKE) BUILD_TYPE=debug $(filter-out debug, $(MAKECMDGOALS))

$(ONCRPCLIB):		CEXTRA += -DLIBRPC_STATIC
$(ONCRPCLIB):		$(LIBOBJS)
		$(RM) $(RMFLAGS) $@ >/dev/null 2>&1
		$(AR) $(ARFLAGS) $@ $^
		$(RANLIB) $@

INSTALLED+=	$(D_BIN)/liboncrpc.$(VERSION).dll
$(ONCRPCDLL):		CEXTRA += -DLIBRPC_DYNAMIC -D_WINDLL
$(ONCRPCDLL):		LINKLIBS = -lsthread -lcompat
$(ONCRPCDLL):		$(DLLOBJS)
		$(LIBTOOL) --mode=link $(CC) $(LDFLAGS) -version-number $(VERSIONSPEC) \
			-rpath $(D_LIB) -bindir $(D_BIN) $(ONCRPCDEF) -o $@ $^ $(LDLIBS)

.unpacked.$(VERSION):	$(VERPACKED)
		@echo "do not delete, managed file" > $@
		@echo "unpacking source $VERPACKED"
		@gzip -c -d $(VERPACKED) | tar -xvf -

.PHONY:		object
object:			$(D_OBJ)/.created

.PHONY:		installinc
installinc:		../include/.created
		@echo publishing headers ...

%/.created:
		-@mkdir $(@D)
		@echo "do not delete, managed directory" > $@

clean:
		@echo $(BUILD_TYPE) clean
		-@$(LIBTOOL) --mode=clean $(RM) $(DLLS) $(DLLOBJS) >/dev/null 2>&1
		-@$(RM) $(RMFLAGS) $(BAK) $(TSKS) $(INSTALLED) $(LIBS) $(CLEAN) $(XCLEAN) >/dev/null 2>&1
		-@$(RM) $(LIBOBJS) >/dev/null 2>&1

$(D_OBJ)/%$(O):		%.c
		$(CC) $(CFLAGS) -o $@ -c $<

$(D_OBJ)/%.lo:		%.c
		$(LIBTOOL) --mode=compile $(CC) $(CFLAGS) -o $@ -c $<

$(D_OBJ)/%.res:		%.rc
		$(RC) -fo $@ $<

$(D_OBJ)/%_res.o:	%.rc
		$(RC) -o $@ $<

#end
